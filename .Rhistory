tax_id |> length()
tax_id
tax_id |> write.table("taxa_id.txt")
tax_id |> write.table("taxa_id.txt",row.names = FALSE)
library(tidyverse)
setwd("results/03_Output_Tables")
pattern<-paste0("*.csv")
filenames <- Sys.glob(pattern)
keyword <- data.frame(filenames=filenames) |>
separate(filenames,sep="_", into=c("SRA", "keyword",
"type", "values")) |>
select(keyword)  |>
pull()
myfiles <-  filenames |>
map(read_csv)
names(myfiles) <- filenames
# Adjust rpm/SRA assay. Divide all SRA columns by the sum of all rows per column.
adj_rpm <- myfiles |>
map(mutate_if, is.numeric, funs(./sum(.,na.rm = TRUE)))
adj_rpm1 <- adj_rpm |>
map(mutate, ID=paste(Superkingdom, Kingdom, Phylum,
Class, Order, Family, Genus, Species, sep="-")) |>
map(select,-c(Superkingdom, Kingdom, Phylum,
Class, Order, Family, Genus, Species))
for (i in seq_along(adj_rpm1)){
colnumber<-dim(adj_rpm1[[i]])[2]-1
adj_rpm1[[i]]<-adj_rpm1[[i]] |>
pivot_longer(names_to="SRAcode",values_to="values",1:colnumber) |>
mutate(values=as.numeric(values))|>
filter(values!=0) |>
mutate(keyword=keyword[i])
}
adj_rpm1 <- bind_rows(adj_rpm1) |>
filter(values!=0) |>
mutate(ID1=ID)
data_id <- adj_rpm1 |>
separate(ID1,into=c("Superkingdom","Kingdom","Phylum","Class","Order",
"Family","Genus","Species"),sep="-") |>
separate(SRAcode,into=c('SRA',"A","B"),sep="\\.") |>
select(-c(A,B)) |>
separate(SRA,into=c("SRA","B"),sep="_") |> select(-B) |>
arrange(Genus) |>
mutate(Species=ifelse(Species=="NA",paste(Genus,"sp."),Species))
# Separate env/single species SRA (using distribution of reads).
# 0.002 SRA have a value greater than 25%
filtered_set <- data_id |>
mutate(group = ifelse(values>0.25,"over-abundant","normal")) |>
filter(group=="over-abundant") |>
select(SRA) |>
pull()
data_id <- data_id |>
mutate(type = ifelse(SRA %in% filtered_set,"over-abundant SRA","normal SRA"))
# Get species and genus names.
tax_id <- c(data_id$Species, data_id$Genus, data_id$Family) |>
unique()
tax_id |> write.table("taxa_id.txt",row.names = FALSE)
adj_rpm1 |> filter(Kingdom=="Fungi") |>
arrange(Genus) |> View()
positive_genus <- adj_rpm1 |>
filter(Kingdom=="Fungi") |>
filter(Genus=="Clavispora"|Genus=="Candida")
positive_species <- positive_genus |>
filter(Species=="[Candida] auris")
positive_species |>
select(SRA) |>
unique()
positive_genus |> View()
positive_species |>
select(taxa) |>
unique()
library(tidyverse)
setwd("results/03_Output_Tables")
pattern<-paste0("*.csv")
filenames <- Sys.glob(pattern)
keyword <- data.frame(filenames=filenames) |>
separate(filenames,sep="_", into=c("SRA", "keyword",
"type", "values")) |>
select(keyword)  |>
pull()
myfiles <-  filenames |>
map(read_csv)
names(myfiles) <- filenames
# Adjust rpm/SRA assay. Divide all SRA columns by the sum of all rows per column.
adj_rpm <- myfiles |>
map(mutate_if, is.numeric, funs(./sum(.,na.rm = TRUE)))
adj_rpm1 <- adj_rpm |>
map(mutate, ID=paste(Superkingdom, Kingdom, Phylum,
Class, Order, Family, Genus, Species, sep="-")) |>
map(select,-c(Superkingdom, Kingdom, Phylum,
Class, Order, Family, Genus, Species))
for (i in seq_along(adj_rpm1)){
colnumber<-dim(adj_rpm1[[i]])[2]-1
adj_rpm1[[i]]<-adj_rpm1[[i]] |>
pivot_longer(names_to="SRAcode",values_to="values",1:colnumber) |>
mutate(values=as.numeric(values))|>
filter(values!=0) |>
mutate(keyword=keyword[i])
}
adj_rpm1 <- bind_rows(adj_rpm1) |>
filter(values!=0) |>
mutate(ID1=ID)
data_id <- adj_rpm1 |>
separate(ID1,into=c("Superkingdom","Kingdom","Phylum","Class","Order",
"Family","Genus","Species"),sep="-") |>
separate(SRAcode,into=c('SRA',"A","B"),sep="\\.") |>
select(-c(A,B)) |>
separate(SRA,into=c("SRA","B"),sep="_") |> select(-B) |>
arrange(Genus) |>
mutate(Species=ifelse(Species=="NA",paste(Genus,"sp."),Species))
# Separate env/single species SRA (using distribution of reads).
# 0.002 SRA have a value greater than 25%
filtered_set <- data_id |>
mutate(group = ifelse(values>0.25,"over-abundant","normal")) |>
filter(group=="over-abundant") |>
select(SRA) |>
pull()
data_id <- data_id |>
mutate(type = ifelse(SRA %in% filtered_set,"over-abundant SRA","normal SRA"))
# Get species and genus names.
tax_id <- c(data_id$Species, data_id$Genus, data_id$Family) |>
unique()
tax_id |> write.table("taxa_id.txt",row.names = FALSE)
adj_rpm1 |> filter(Kingdom=="Fungi") |>
arrange(Genus) |> View()
positive_genus <- adj_rpm1 |>
filter(Kingdom=="Fungi") |>
filter(Genus=="Clavispora"|Genus=="Candida")
positive_species <- positive_genus |>
filter(Species=="[Candida] auris")
positive_species |>
select(SRA) |>
unique()
positive_species |>
select(taxa) |>
unique()
genus_SRA <- positive_genus |>
select(SRA) |>
pull()
adj_rpm1  |>
filter(Order=="Saccharomycetales")  |>
ggplot(aes(x=keyword,fill=Family)) +
theme_minimal() +
scale_fill_manual(values=family_Palette) +
geom_bar(position = "fill") +
guides(fill=guide_legend(ncol=2)) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1)) +
theme(legend.position = "bottom") +
ggtitle("Distribution of Saccharomycetales families in all environments") +
xlab("keywords")
adj_rpm1  |>
filter(Kingdom=="Fungi")  |>
ggplot(aes(x=keyword,fill=Order))+
theme_minimal() +
geom_bar(aes(fill=Order), position="fill") +
guides(fill=guide_legend(ncol=2))+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
theme(legend.position = "none")+
ggtitle("Distribution of Fungal orders in different all environments")+
xlab("keywords")
adj_rpm1 |>
filter(SRA%in%genus_SRA) |>
filter(Order=="Saccharomycetales")  |>
ggplot(aes(x=keyword,fill=Family))+
theme_minimal()+
scale_fill_manual(values=family_Palette) +
geom_bar(position="fill") +
guides(fill=guide_legend(ncol=2))+
ggtitle("Distribution of Saccharomycetales families in environments with Candida/Clavispora")+
xlab("keywords") +
theme(legend.position = "bottom")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
adj_rpm1 |>
filter(SRA%in%genus_SRA) |>
filter(Genus=="Clavispora"|Genus=="Candida")  |>
ggplot(aes(x=keyword,fill=Species))+
theme_minimal() +
geom_bar(position="fill") +
guides(fill=guide_legend(ncol=2))+
ggtitle("Distribution of Species in environments with Candida/Clavispora")+
xlab("keywords")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
theme(legend.position = "right")
filename <- "results.csv"
library(tidyverse)
features_fasta_name <- list.files("data/domestic_wild/")
file_name <- list.files("data/domestic_wild/")
file_name
files <- list()
for (i in seq_along(features_fasta_name)){
files[[i]] <- read.table(file.path("data/domestic_wild/",
file_name[i]))
}
files[[1]]
files[[2]]
files[[4]]
files[[5]]
names(files) <- file_name
files
files[[1]]
files[[1]] |> names()
files[[2]]
file_name
str_detect(files, "wild", negate = FALSE)
str_detect(file_name, "wild", negate = FALSE)
vect_wild <- str_detect(file_name, "wild", negate = FALSE)
vect_dom <- !vect_wild
vect_dom
vect_dom
vect_wild
files
files <- list()
for (i in seq_along(features_fasta_name)){
files[[i]] <- read.table(file.path("data/domestic_wild/",
file_name[i]))
files[[i]]$V2 <- file_name[i]
files[[i]]$V3 <- str_detect(file_name[i], "wild", negate = FALSE)
}
files
temp <- do.call(rbind, files)
temp
list_SRA <- do.call(rbind, files)
list_SRA
list_SRA <- list_SRA |>
separate(V2,sep="_",into=c("n1","n2","n3"))
list_SRA |> View()
library(tidyverse)
file_name <- list.files("data/domestic_wild/")
files <- list()
for (i in seq_along(features_fasta_name)){
files[[i]] <- read.table(file.path("data/domestic_wild/",
file_name[i]))
files[[i]]$V2 <- file_name[i]
files[[i]]$V3 <- str_detect(file_name[i], "wild", negate = FALSE)
}
list_SRA <- do.call(rbind, files)
list_SRA <- list_SRA |>
separate(V2,sep="_",into=c("n1","n2","n3"))
list_SRA <- do.call(rbind, files) |>
separate(V2,sep="_",into=c("n1","n2","n3"))
list_SRA
list_SRA <- do.call(rbind, files) |>
separate(V2,sep="_",into=c("n1","n2","n3")) |>
separate(V3,sep="\\.",into=c("n3","n4")) |>
mutate(is.wild=ifelse(n3="dom",FALSE,TRUE))
list_SRA <- do.call(rbind, files) |>
separate(V2,sep="_",into=c("n1","n2","n3")) |>
separate(n3,sep="\\.",into=c("n3","n4")) |>
mutate(is.wild=ifelse(n3="dom",FALSE,TRUE))
list_SRA <- do.call(rbind, files) |>
separate(V2,sep="_",into=c("n1","n2","n3")) |>
separate(n3,sep="\\.",into=c("n3","n4")) |>
mutate(is.wild=ifelse(n3=="dom",FALSE,TRUE))
list_SRA
View(list_SRA)
files
files <- list()
for (i in seq_along(features_fasta_name)){
files[[i]] <- read.table(file.path("data/domestic_wild/",
file_name[i]))
files[[i]]$V2 <- file_name[i]
files[[i]] <- files[[i]] |>
separate(V2,sep="_",into=c("n1","n2","n3")) |>
separate(n3,sep="\\.",into=c("n3","n4")) |>
mutate(is.wild=ifelse(n3=="dom",FALSE,TRUE))
}
files
files[[1]]
files[[1]]$V1
for (i in seq_along(file_name)){
write.table(file=file.path("data/domestic_wild/",file_name[i]),
files[[i]]$V1)
}
for (i in seq_along(file_name)){
write.table(file=file.path("data/domestic_wild/",file_name[i]),
files[[i]]$V1,row.names = FALSE)
}
library(tidyverse)
file_name <- list.files("data/domestic_wild/")
files <- list()
for (i in seq_along(features_fasta_name)){
files[[i]] <- read.table(file.path("data/domestic_wild/",
file_name[i]))
files[[i]]$V2 <- file_name[i]
files[[i]] <- files[[i]] |>
separate(V2,sep="_",into=c("n1","n2","n3")) |>
separate(n3,sep="\\.",into=c("n3","n4")) |>
mutate(is.wild=ifelse(n3=="dom",FALSE,TRUE))
}
files
files <- list()
for (i in seq_along(features_fasta_name)){
files[[i]] <- read.table(file.path("data/domestic_wild/",
file_name[i]))
files[[i]]$V2 <- file_name[i]
files[[i]] <- files[[i]] |>
separate(V2,sep="_",into=c("n1","n2","n3")) |>
separate(n3,sep="\\.",into=c("n3","n4")) |>
mutate(is.wild=ifelse(n3=="dom",FALSE,TRUE))
files[[i]] <- files[[i]][-1,]
}
files
temp <- do.call(rbind, files)
temp
temp$n2
temp$n2 |> unique()
species <- temp$n2 |> unique()
temp
setdiff(letters[1:6],letters[3:7])
for (i in seq_along(species)){
domvec <- temp |> filter(n2==species[i]) |>
filter(n3="dom")
wildallvec <- temp |> filter(n2==species[i]) |>
filter(n3="wildall")
wildonly <- setdiff(wildallvec,domvec)
}
for (i in seq_along(species)){
domvec <- temp |> filter(n2==species[i]) |>
filter(n3=="dom")
wildallvec <- temp |> filter(n2==species[i]) |>
filter(n3=="wildall")
wildonly <- setdiff(wildallvec,domvec)
}
domvec
domvec |> dim()
wildallvec |> dim()
wildonly |> dim()
wildonly
for (i in seq_along(species)){
domvec <- temp |> filter(n2==species[i]) |>
filter(n3=="dom")
wildallvec <- temp |> filter(n2==species[i]) |>
filter(n3=="wildall")
wildonly <- setdiff(wildallvec,domvec)
write.table(wildonly,file = file.path("data/domestic_wild/",paste0("SraAccList_",species[i],
"_wildonly.txt")),row.names = FALSE,
col.names = FALSE)
}
wildonly
for (i in seq_along(species)){
domvec <- temp |> filter(n2==species[i]) |>
filter(n3=="dom")
wildallvec <- temp |> filter(n2==species[i]) |>
filter(n3=="wildall")
wildonly <- setdiff(wildallvec,domvec) |>
select(V1)
write.table(wildonly,file = file.path("data/domestic_wild/",paste0("SraAccList_",species[i],
"_wildonly.txt")),row.names = FALSE,
col.names = FALSE)
}
file_name
files
file_name
for (i in seq_along(file_name)){
write.table(files[[i]]$V1,file = file.path("data/domestic_wild/",file_name[i]),row.names = FALSE,
col.names = FALSE)
}
for (i in seq_along(file_name)){
write.table(files[[i]]$V1,file = file.path("data/domestic_wild/",file_name[i]),row.names = FALSE,
col.names = FALSE)
}
file_name <- list.files("data/domestic_wild/")
files <- list()
for (i in seq_along(features_fasta_name)){
files[[i]] <- read.table(file.path("data/domestic_wild/",
file_name[i]))
files[[i]]$V2 <- file_name[i]
files[[i]] <- files[[i]] |>
separate(V2,sep="_",into=c("n1","n2","n3")) |>
separate(n3,sep="\\.",into=c("n3","n4")) |>
mutate(is.wild=ifelse(n3=="dom",FALSE,TRUE))
files[[i]] <- files[[i]][-1,]
}
temp <- do.call(rbind, files)
species <- temp$n2 |> unique()
for (i in seq_along(species)){
domvec <- temp |> filter(n2==species[i]) |>
filter(n3=="dom")
wildallvec <- temp |> filter(n2==species[i]) |>
filter(n3=="wildall")
wildonly <- setdiff(wildallvec,domvec) |>
select(V1)
write.table(wildonly,file = file.path("data/domestic_wild/",paste0("SraAccList_",species[i],
"_wildonly.txt")),row.names = FALSE,
col.names = FALSE)
}
for (i in seq_along(file_name)){
write.table(files[[i]]$V1,file = file.path("data/domestic_wild/",file_name[i]),row.names = FALSE,
col.names = FALSE,quote = FALSE)
}
library(tidyverse)
file_name <- list.files("data/domestic_wild/")
files <- list()
for (i in seq_along(features_fasta_name)){
files[[i]] <- read.table(file.path("data/domestic_wild/",
file_name[i]))
files[[i]]$V2 <- file_name[i]
files[[i]] <- files[[i]] |>
separate(V2,sep="_",into=c("n1","n2","n3")) |>
separate(n3,sep="\\.",into=c("n3","n4")) |>
mutate(is.wild=ifelse(n3=="dom",FALSE,TRUE))
files[[i]] <- files[[i]][-1,]
}
library(tidyverse)
file_name <- list.files("data/domestic_wild/")
files <- list()
for (i in seq_along(features_fasta_name)){
files[[i]] <- read.table(file.path("data/domestic_wild/",
file_name[i]))
files[[i]]$V2 <- file_name[i]
files[[i]] <- files[[i]] |>
separate(V2,sep="_",into=c("n1","n2","n3")) |>
separate(n3,sep="\\.",into=c("n3","n4")) |>
mutate(is.wild=ifelse(n3=="dom",FALSE,TRUE))
files[[i]] <- files[[i]][-1,]
}
file_name
library(tidyverse)
file_name <- list.files("data/domestic_wild/")
files <- list()
for (i in seq_along(features_fasta_name)){
files[[i]] <- read.table(file.path("data/domestic_wild/",
file_name[i]))
files[[i]]$V2 <- file_name[i]
files[[i]] <- files[[i]] |>
separate(V2,sep="_",into=c("n1","n2","n3")) |>
separate(n3,sep="\\.",into=c("n3","n4")) |>
mutate(is.wild=ifelse(n3=="dom",FALSE,TRUE))
files[[i]] <- files[[i]][-1,]
}
file_name <- list.files("data/domestic_wild/")
files <- list()
file_name
files <- list()
for (i in seq_along(features_fasta_name)){
files[[i]] <- read.table(file.path("data/domestic_wild/",
file_name[i]))
files[[i]]$V2 <- file_name[i]
files[[i]] <- files[[i]] |>
separate(V2,sep="_",into=c("n1","n2","n3")) |>
separate(n3,sep="\\.",into=c("n3","n4")) |>
mutate(is.wild=ifelse(n3=="dom",FALSE,TRUE))
}
files <- list()
for (i in seq_along(features_fasta_name)){
files[[i]] <- read.table(file.path("data/domestic_wild/",
file_name[i]))
files[[i]]$V2 <- file_name[i]
# files[[i]] <- files[[i]] |>
#   separate(V2,sep="_",into=c("n1","n2","n3")) |>
#   separate(n3,sep="\\.",into=c("n3","n4")) |>
#   mutate(is.wild=ifelse(n3=="dom",FALSE,TRUE))
}
files <- list()
for (i in seq_along(features_fasta_name)){
files[[i]] <- read.table(file.path("data/domestic_wild/",
file_name[i]))
#files[[i]]$V2 <- file_name[i]
# files[[i]] <- files[[i]] |>
#   separate(V2,sep="_",into=c("n1","n2","n3")) |>
#   separate(n3,sep="\\.",into=c("n3","n4")) |>
#   mutate(is.wild=ifelse(n3=="dom",FALSE,TRUE))
}
read.table(file.path("data/domestic_wild/",
file_name[1]))
read.table(file.path("data/domestic_wild/",
file_name[2]))
read.table(file.path("data/domestic_wild/",
file_name[56]))
read.table(file.path("data/domestic_wild/",
file_name[58]))
read.table(file.path("data/domestic_wild/",
file_name[59]))
file_name <- list.files("data/domestic_wild/")
file_name |> length()
source("C:/Users/alexg/GitHub/ch4-c_auris/bin/1.wildminusdomestic.R", echo=TRUE)
files <- list()
for (i in seq_along(features_fasta_name)){
files[[i]] <- read.table(file.path("data/domestic_wild/",
file_name[i]))
files[[i]]$V2 <- file_name[i]
files[[i]] <- files[[i]] |>
separate(V2,sep="_",into=c("n1","n2","n3")) |>
separate(n3,sep="\\.",into=c("n3","n4")) |>
mutate(is.wild=ifelse(n3=="dom",FALSE,TRUE))
}
library(tidyverse)
file_name <- list.files("data/domestic_wild/")
files <- list()
for (i in seq_along(features_fasta_name)){
files[[i]] <- read.table(file.path("data/domestic_wild/",
file_name[i]))
files[[i]]$V2 <- file_name[i]
files[[i]] <- files[[i]] |>
separate(V2,sep="_",into=c("n1","n2","n3")) |>
separate(n3,sep="\\.",into=c("n3","n4")) |>
mutate(is.wild=ifelse(n3=="dom",FALSE,TRUE))
}
temp <- do.call(rbind, files)
species <- temp$n2 |> unique()
for (i in seq_along(species)){
domvec <- temp |> filter(n2==species[i]) |>
filter(n3=="dom")
wildallvec <- temp |> filter(n2==species[i]) |>
filter(n3=="wildall")
wildonly <- setdiff(wildallvec,domvec) |>
select(V1)
write.table(wildonly,file = file.path("data/domestic_wild/",paste0("SraAccList_",species[i],
"_wildonly.txt")),row.names = FALSE,
col.names = FALSE,quote = FALSE)
}
wildonly
wildonly |> dim()
