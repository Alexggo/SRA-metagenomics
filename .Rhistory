ggtitle("Distribution of Species in environments with Candida/Clavispora")
myfiles %>%
filter(SRA%in%genus_SRA) %>%
filter(Genus=="Clavispora"|Genus=="Candida")  %>%
ggplot(aes(x=taxa,fill=Species))+
theme_minimal() +
geom_bar(aes(fill=Species,colour="black"), position="stack") +
guides(fill=guide_legend(ncol=2))+
ggtitle("Distribution of Species in environments with Candida/Clavispora")
myfiles %>%
filter(SRA%in%genus_SRA) %>%
filter(Genus=="Clavispora"|Genus=="Candida")  %>%
ggplot(aes(x=taxa,fill=Species))+
theme_minimal() +
geom_bar(aes(fill=Species), position="stack") +
guides(fill=guide_legend(ncol=2))+
ggtitle("Distribution of Species in environments with Candida/Clavispora")
myfiles %>%
filter(SRA%in%genus_SRA) %>%
filter(Genus=="Clavispora"|Genus=="Candida")  %>%
ggplot(aes(x=taxa,fill=Species))+
theme_minimal() +
geom_bar(aes(fill=Species), position="stack") +
guides(fill=guide_legend(ncol=2))+
ggtitle("Distribution of Species in environments with Candida/Clavispora")+
scale_fill_brewer(palette="OrRd")
myfiles %>%
filter(SRA%in%genus_SRA) %>%
filter(Genus=="Clavispora"|Genus=="Candida")  %>%
ggplot(aes(x=taxa,fill=Species))+
theme_minimal() +
geom_bar(aes(fill=Species), position="stack") +
guides(fill=guide_legend(ncol=2))+
ggtitle("Distribution of Species in environments with Candida/Clavispora")
filename <- "results.csv"
filepath <- file.path("..","04_Formatted_Tables",filename)
write_csv(myfiles,filepath)
myfiles  %>%
filter(Order=="Saccharomycetales")  %>%
ggplot(aes(x=taxa,fill=Family))+
theme_minimal()+
scale_fill_manual(values=family_Palette) +
geom_bar(aes(fill=Family), position="stack") +
guides(fill=guide_legend(ncol=2))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
theme(legend.position = "bottom")+
ggtitle("Distribution of Saccharomycetales families in all environments")
myfiles  %>%
filter(Kingdom=="Fungi")  %>%
ggplot(aes(x=taxa,fill=Order))+
theme_minimal() +
geom_bar(aes(fill=Order), position="stack") +
guides(fill=guide_legend(ncol=2))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
theme(legend.position = "none")+
ggtitle("Distribution of Fungal orders in different all environments")
myfiles %>%
filter(SRA%in%genus_SRA) %>%
filter(Order=="Saccharomycetales")  %>%
ggplot(aes(x=taxa,fill=Family))+
theme_minimal()+
scale_fill_manual(values=family_Palette) +
geom_bar(aes(fill=Family), position="stack") +
guides(fill=guide_legend(ncol=2))+
ggtitle("Distribution of Saccharomycetales families in environments with Candida/Clavispora")
myfiles %>%
filter(SRA%in%genus_SRA) %>%
filter(Genus=="Clavispora"|Genus=="Candida")  %>%
ggplot(aes(x=taxa,fill=Species))+
theme_minimal() +
geom_bar(aes(fill=Species), position="stack") +
guides(fill=guide_legend(ncol=2))+
ggtitle("Distribution of Species in environments with Candida/Clavispora")
myfiles$SRA %>% unique() %>% length()
library(tidyverse)
setwd("results/03_Output_Tables")
pattern<-paste0("*.csv")
filenames <- Sys.glob(pattern)
myfiles$SRA %>% unique() %>% length()
2886195/8787
myfiles$Species %>% unique() %>% length()
myfiles %>% dim()
library(tidyverse)
setwd("results/03_Output_Tables")
pattern<-paste0("*.csv")
filenames <- Sys.glob(pattern)
taxa <- data.frame(filenames=filenames) %>%
separate(filenames,sep="_",into=c("SRA","taxa","type","values")) %>%
select(taxa)  %>% pull()
myfiles = lapply(filenames, read_csv)
names(myfiles) <- filenames
for (i in 1:length(myfiles)){
myfiles[[i]]<-myfiles[[i]] %>%
mutate(ID=paste(Superkingdom,Kingdom,Phylum,Class,Order,Family,Genus,Species,sep="-"))
myfiles[[i]]<-myfiles[[i]] %>%select(-c(Superkingdom,Kingdom,Phylum,Class,Order,Family,Genus,Species))
colnumber<-dim(myfiles[[i]])[2]-1
myfiles[[i]]<-myfiles[[i]] %>%
pivot_longer(names_to="SRAcode",values_to="values",1:colnumber) %>%
mutate(values=as.numeric(values))%>%
filter(values!=0) %>%
mutate(taxa=taxa[i])
}
myfiles <- bind_rows(myfiles) %>%
filter(values!=0) %>%
mutate(ID1=ID)
myfiles <- myfiles %>%  separate(ID1,into=c("Superkingdom","Kingdom","Phylum","Class","Order",
"Family","Genus","Species"),sep="-") %>%
separate(SRAcode,into=c('SRA',"A","B"),sep="\\.") %>%
select(-c(A,B)) %>%
separate(SRA,into=c("SRA","B"),sep="_") %>% select(-B) %>%
arrange(Genus)
myfiles %>% filter(Kingdom=="Fungi") %>%
arrange(Genus) %>% View()
positive_species <- positive_genus %>%
filter(Species=="[Candida] auris")
positive_genus <- myfiles %>%
filter(Kingdom=="Fungi") %>%
filter(Genus=="Clavispora"|Genus=="Candida")
positive_species <- positive_genus %>%
filter(Species=="[Candida] auris")
positive_species %>% select(SRA) %>% unique()
genus_SRA <- positive_genus %>% select(SRA) %>% pull()
myfiles  %>%
filter(Order=="Saccharomycetales")  %>%
ggplot(aes(x=taxa,fill=Family))+
theme_minimal()+
scale_fill_manual(values=family_Palette) +
geom_bar(aes(fill=Family), position="stack") +
guides(fill=guide_legend(ncol=2))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
theme(legend.position = "bottom")+
ggtitle("Distribution of Saccharomycetales families in all environments")+
xlab("keywords")
myfiles  %>%
filter(Kingdom=="Fungi")  %>%
ggplot(aes(x=taxa,fill=Order))+
theme_minimal() +
geom_bar(aes(fill=Order), position="stack") +
guides(fill=guide_legend(ncol=2))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
theme(legend.position = "none")+
ggtitle("Distribution of Fungal orders in different all environments")+
xlab("keywords")
myfiles %>%
filter(SRA%in%genus_SRA) %>%
filter(Order=="Saccharomycetales")  %>%
ggplot(aes(x=taxa,fill=Family))+
theme_minimal()+
scale_fill_manual(values=family_Palette) +
geom_bar(aes(fill=Family), position="stack") +
guides(fill=guide_legend(ncol=2))+
ggtitle("Distribution of Saccharomycetales families in environments with Candida/Clavispora")+
xlab("keywords")
myfiles %>%
filter(SRA%in%genus_SRA) %>%
filter(Genus=="Clavispora"|Genus=="Candida")  %>%
ggplot(aes(x=taxa,fill=Species))+
theme_minimal() +
geom_bar(aes(fill=Species), position="stack") +
guides(fill=guide_legend(ncol=2))+
ggtitle("Distribution of Species in environments with Candida/Clavispora")+
xlab("keywords")
filename <- "results.csv"
filepath <- file.path("..","04_Formatted_Tables",filename)
library(tidyverse)
setwd("results/03_Output_Tables")
pattern<-paste0("*.csv")
filenames <- Sys.glob(pattern)
keyword <- data.frame(filenames=filenames) |>
separate(filenames,sep="_", into=c("SRA", "keyword",
"type", "values")) |>
select(keyword)  |>
pull()
myfiles <-  filenames |>
map(read_csv)
names(myfiles) <- filenames
# Adjust rpm/SRA assay. Divide all SRA columns by the sum of all rows per column.
adj_rpm <- myfiles |>
map(mutate_if, is.numeric, funs(./sum(.,na.rm = TRUE)))
adj_rpm1 <- adj_rpm |>
map(mutate, ID=paste(Superkingdom, Kingdom, Phylum,
Class, Order, Family, Genus, Species, sep="-")) |>
map(select,-c(Superkingdom, Kingdom, Phylum,
Class, Order, Family, Genus, Species))
for (i in seq_along(adj_rpm1)){
colnumber<-dim(adj_rpm1[[i]])[2]-1
adj_rpm1[[i]]<-adj_rpm1[[i]] |>
pivot_longer(names_to="SRAcode",values_to="values",1:colnumber) |>
mutate(values=as.numeric(values))|>
filter(values!=0) |>
mutate(keyword=keyword[i])
}
adj_rpm1 <- bind_rows(adj_rpm1) |>
filter(values!=0) |>
mutate(ID1=ID)
adj_rpm1 <- adj_rpm1 |>
separate(ID1,into=c("Superkingdom","Kingdom","Phylum","Class","Order",
"Family","Genus","Species"),sep="-") |>
separate(SRAcode,into=c('SRA',"A","B"),sep="\\.") |>
select(-c(A,B)) |>
separate(SRA,into=c("SRA","B"),sep="_") |> select(-B) |>
arrange(Genus) |>
mutate(Species=ifelse(Species=="NA",paste(Genus,"sp."),Species))
adj_rpm1 |> str()
adj_rpm1 |> summary()
adj_rpm1 |>
group_by(ID,SRA,keyword) |>
summarise(max_value = max(values)) |>
sort(max_value, decreasing = TRUE)
adj_rpm1 |>
filter(values>0.5)
adj_rpm1 |>
filter(values>0.5) |> View()
adj_rpm1 |>
mutate(test = ifelse(values>0.25,TRUE,FALSE))
adj_rpm1 |>
mutate(test = ifelse(values>0.25,TRUE,FALSE)) |> View()
adj_rpm1 |> select(values) |> hist()
adj_rpm1 |> select(values) |> pull() |> hist()
adj_rpm1 |> filter(values>0) |> pull() |> sum()
adj_rpm1 |> filter(values>0) |> pull() |> sum()
adj_rpm1 |> filter(values>0) |> sum()
adj_rpm1 |> filter(values>0) |> dim()
adj_rpm1 |> filter(values>=1) |> dim()
adj_rpm1 |> filter(values>=0.9) |> dim()
adj_rpm1 |> filter(values>=0.75) |> dim()
adj_rpm1 |> filter(values>=0.60) |> dim()
adj_rpm1 |> filter(values>=0.50) |> dim()
adj_rpm1 |> filter(values>=0.40) |> dim()
adj_rpm1 |> filter(values>=0.25) |> dim()
10875/4031071
# Separate env/single species SRA (using distribution of reads).
# 0.002 SRA have a value greater than 25%
adj_rpm1 |>
mutate(group = ifelse(values>0.25,"over-abundant","normal")) |> View()
# Separate env/single species SRA (using distribution of reads).
# 0.002 SRA have a value greater than 25%
filtered_set <- adj_rpm1 |>
mutate(group = ifelse(values>0.25,"over-abundant","normal"))
filtered_set |>
filter(group=="over-abundant") |>
select(SRA) |>
pull()
SRA_over_abundant <- filtered_set |>
filter(group=="over-abundant") |>
select(SRA) |>
pull()
adj_rpm1 |>
mutate(x = ifelse(SRA %in% SRA_over_abundant,"over-abundant","normal"))
adj_rpm1 <- adj_rpm1 |>
mutate(type = ifelse(SRA %in% SRA_over_abundant,"over-abundant","normal"))
View(adj_rpm1)
adj_rpm1 |> sort(SRA) |> View()
adj_rpm1 |> arrange(SRA) |> View()
adj_rpm1 |> filter(type=="over-abundant") |> arrange(SRA) |> View()
# Adjust rpm/SRA assay. Divide all SRA columns by the sum of all rows per column.
adj_rpm <- myfiles |>
map(mutate_if, is.numeric, funs(./sum(.,na.rm = TRUE)))
adj_rpm1 <- adj_rpm |>
map(mutate, ID=paste(Superkingdom, Kingdom, Phylum,
Class, Order, Family, Genus, Species, sep="-")) |>
map(select,-c(Superkingdom, Kingdom, Phylum,
Class, Order, Family, Genus, Species))
for (i in seq_along(adj_rpm1)){
colnumber<-dim(adj_rpm1[[i]])[2]-1
adj_rpm1[[i]]<-adj_rpm1[[i]] |>
pivot_longer(names_to="SRAcode",values_to="values",1:colnumber) |>
mutate(values=as.numeric(values))|>
filter(values!=0) |>
mutate(keyword=keyword[i])
}
adj_rpm1 <- bind_rows(adj_rpm1) |>
filter(values!=0) |>
mutate(ID1=ID)
data_id <- adj_rpm1 |>
separate(ID1,into=c("Superkingdom","Kingdom","Phylum","Class","Order",
"Family","Genus","Species"),sep="-") |>
separate(SRAcode,into=c('SRA',"A","B"),sep="\\.") |>
select(-c(A,B)) |>
separate(SRA,into=c("SRA","B"),sep="_") |> select(-B) |>
arrange(Genus) |>
mutate(Species=ifelse(Species=="NA",paste(Genus,"sp."),Species))
data_id
data_id |> group_by(ID,SRA,keyword) |> summarise(max_value = max(values)) |> View()
data_id |> group_by(ID,SRA,keyword) |> summarise(max_value = max(values)) |> arrange(max_value, decreasing=TRUE)|> View()
data_id |> group_by(ID,SRA,keyword) |> summarise(max_value = max(values)) |> arrange(max_value, decreasing=TRUE)|> select(max_value) |> hist()
data_id |> group_by(ID,SRA,keyword) |> summarise(max_value = max(values)) |> arrange(max_value, decreasing=TRUE)|> select(max_value) |> pull() |> hist()
data_id <- adj_rpm1 |>
separate(ID1,into=c("Superkingdom","Kingdom","Phylum","Class","Order",
"Family","Genus","Species"),sep="-") |>
separate(SRAcode,into=c('SRA',"A","B"),sep="\\.") |>
select(-c(A,B)) |>
separate(SRA,into=c("SRA","B"),sep="_") |> select(-B) |>
arrange(Genus) |>
mutate(Species=ifelse(Species=="NA",paste(Genus,"sp."),Species))
# Separate env/single species SRA (using distribution of reads).
# 0.002 SRA have a value greater than 25%
filtered_set <- data_id |>
mutate(group = ifelse(values>0.25,"over-abundant","normal")) |>
filter(group=="over-abundant") |>
select(SRA) |>
pull()
data_id <- data_id |>
mutate(type = ifelse(SRA %in% filtered_set,"over-abundant","normal"))
data_id |>
group_by(type)
data_id |>
group_by(type) |>
View()
data_id <- adj_rpm1 |>
separate(ID1,into=c("Superkingdom","Kingdom","Phylum","Class","Order",
"Family","Genus","Species"),sep="-") |>
separate(SRAcode,into=c('SRA',"A","B"),sep="\\.") |>
select(-c(A,B)) |>
separate(SRA,into=c("SRA","B"),sep="_") |> select(-B) |>
arrange(Genus) |>
mutate(Species=ifelse(Species=="NA",paste(Genus,"sp."),Species))
# Separate env/single species SRA (using distribution of reads).
# 0.002 SRA have a value greater than 25%
filtered_set <- data_id |>
mutate(group = ifelse(values>0.25,"over-abundant","normal")) |>
filter(group=="over-abundant") |>
select(SRA) |>
pull()
data_id <- data_id |>
mutate(type = ifelse(SRA %in% filtered_set,"over-abundant SRA","normal SRA"))
# Get species and genus names.
tax_id <- c(data_id$Species, data_id$Genus, data_id$Family) |>
unique()
tax_id |> length()
tax_id
tax_id |> write.table("taxa_id.txt")
tax_id |> write.table("taxa_id.txt",row.names = FALSE)
library(tidyverse)
setwd("results/03_Output_Tables")
pattern<-paste0("*.csv")
filenames <- Sys.glob(pattern)
keyword <- data.frame(filenames=filenames) |>
separate(filenames,sep="_", into=c("SRA", "keyword",
"type", "values")) |>
select(keyword)  |>
pull()
myfiles <-  filenames |>
map(read_csv)
names(myfiles) <- filenames
# Adjust rpm/SRA assay. Divide all SRA columns by the sum of all rows per column.
adj_rpm <- myfiles |>
map(mutate_if, is.numeric, funs(./sum(.,na.rm = TRUE)))
adj_rpm1 <- adj_rpm |>
map(mutate, ID=paste(Superkingdom, Kingdom, Phylum,
Class, Order, Family, Genus, Species, sep="-")) |>
map(select,-c(Superkingdom, Kingdom, Phylum,
Class, Order, Family, Genus, Species))
for (i in seq_along(adj_rpm1)){
colnumber<-dim(adj_rpm1[[i]])[2]-1
adj_rpm1[[i]]<-adj_rpm1[[i]] |>
pivot_longer(names_to="SRAcode",values_to="values",1:colnumber) |>
mutate(values=as.numeric(values))|>
filter(values!=0) |>
mutate(keyword=keyword[i])
}
adj_rpm1 <- bind_rows(adj_rpm1) |>
filter(values!=0) |>
mutate(ID1=ID)
data_id <- adj_rpm1 |>
separate(ID1,into=c("Superkingdom","Kingdom","Phylum","Class","Order",
"Family","Genus","Species"),sep="-") |>
separate(SRAcode,into=c('SRA',"A","B"),sep="\\.") |>
select(-c(A,B)) |>
separate(SRA,into=c("SRA","B"),sep="_") |> select(-B) |>
arrange(Genus) |>
mutate(Species=ifelse(Species=="NA",paste(Genus,"sp."),Species))
# Separate env/single species SRA (using distribution of reads).
# 0.002 SRA have a value greater than 25%
filtered_set <- data_id |>
mutate(group = ifelse(values>0.25,"over-abundant","normal")) |>
filter(group=="over-abundant") |>
select(SRA) |>
pull()
data_id <- data_id |>
mutate(type = ifelse(SRA %in% filtered_set,"over-abundant SRA","normal SRA"))
# Get species and genus names.
tax_id <- c(data_id$Species, data_id$Genus, data_id$Family) |>
unique()
tax_id |> write.table("taxa_id.txt",row.names = FALSE)
adj_rpm1 |> filter(Kingdom=="Fungi") |>
arrange(Genus) |> View()
positive_genus <- adj_rpm1 |>
filter(Kingdom=="Fungi") |>
filter(Genus=="Clavispora"|Genus=="Candida")
positive_species <- positive_genus |>
filter(Species=="[Candida] auris")
positive_species |>
select(SRA) |>
unique()
positive_genus |> View()
positive_species |>
select(taxa) |>
unique()
library(tidyverse)
setwd("results/03_Output_Tables")
pattern<-paste0("*.csv")
filenames <- Sys.glob(pattern)
keyword <- data.frame(filenames=filenames) |>
separate(filenames,sep="_", into=c("SRA", "keyword",
"type", "values")) |>
select(keyword)  |>
pull()
myfiles <-  filenames |>
map(read_csv)
names(myfiles) <- filenames
# Adjust rpm/SRA assay. Divide all SRA columns by the sum of all rows per column.
adj_rpm <- myfiles |>
map(mutate_if, is.numeric, funs(./sum(.,na.rm = TRUE)))
adj_rpm1 <- adj_rpm |>
map(mutate, ID=paste(Superkingdom, Kingdom, Phylum,
Class, Order, Family, Genus, Species, sep="-")) |>
map(select,-c(Superkingdom, Kingdom, Phylum,
Class, Order, Family, Genus, Species))
for (i in seq_along(adj_rpm1)){
colnumber<-dim(adj_rpm1[[i]])[2]-1
adj_rpm1[[i]]<-adj_rpm1[[i]] |>
pivot_longer(names_to="SRAcode",values_to="values",1:colnumber) |>
mutate(values=as.numeric(values))|>
filter(values!=0) |>
mutate(keyword=keyword[i])
}
adj_rpm1 <- bind_rows(adj_rpm1) |>
filter(values!=0) |>
mutate(ID1=ID)
data_id <- adj_rpm1 |>
separate(ID1,into=c("Superkingdom","Kingdom","Phylum","Class","Order",
"Family","Genus","Species"),sep="-") |>
separate(SRAcode,into=c('SRA',"A","B"),sep="\\.") |>
select(-c(A,B)) |>
separate(SRA,into=c("SRA","B"),sep="_") |> select(-B) |>
arrange(Genus) |>
mutate(Species=ifelse(Species=="NA",paste(Genus,"sp."),Species))
# Separate env/single species SRA (using distribution of reads).
# 0.002 SRA have a value greater than 25%
filtered_set <- data_id |>
mutate(group = ifelse(values>0.25,"over-abundant","normal")) |>
filter(group=="over-abundant") |>
select(SRA) |>
pull()
data_id <- data_id |>
mutate(type = ifelse(SRA %in% filtered_set,"over-abundant SRA","normal SRA"))
# Get species and genus names.
tax_id <- c(data_id$Species, data_id$Genus, data_id$Family) |>
unique()
tax_id |> write.table("taxa_id.txt",row.names = FALSE)
adj_rpm1 |> filter(Kingdom=="Fungi") |>
arrange(Genus) |> View()
positive_genus <- adj_rpm1 |>
filter(Kingdom=="Fungi") |>
filter(Genus=="Clavispora"|Genus=="Candida")
positive_species <- positive_genus |>
filter(Species=="[Candida] auris")
positive_species |>
select(SRA) |>
unique()
positive_species |>
select(taxa) |>
unique()
genus_SRA <- positive_genus |>
select(SRA) |>
pull()
adj_rpm1  |>
filter(Order=="Saccharomycetales")  |>
ggplot(aes(x=keyword,fill=Family)) +
theme_minimal() +
scale_fill_manual(values=family_Palette) +
geom_bar(position = "fill") +
guides(fill=guide_legend(ncol=2)) +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1)) +
theme(legend.position = "bottom") +
ggtitle("Distribution of Saccharomycetales families in all environments") +
xlab("keywords")
adj_rpm1  |>
filter(Kingdom=="Fungi")  |>
ggplot(aes(x=keyword,fill=Order))+
theme_minimal() +
geom_bar(aes(fill=Order), position="fill") +
guides(fill=guide_legend(ncol=2))+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
theme(legend.position = "none")+
ggtitle("Distribution of Fungal orders in different all environments")+
xlab("keywords")
adj_rpm1 |>
filter(SRA%in%genus_SRA) |>
filter(Order=="Saccharomycetales")  |>
ggplot(aes(x=keyword,fill=Family))+
theme_minimal()+
scale_fill_manual(values=family_Palette) +
geom_bar(position="fill") +
guides(fill=guide_legend(ncol=2))+
ggtitle("Distribution of Saccharomycetales families in environments with Candida/Clavispora")+
xlab("keywords") +
theme(legend.position = "bottom")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))
adj_rpm1 |>
filter(SRA%in%genus_SRA) |>
filter(Genus=="Clavispora"|Genus=="Candida")  |>
ggplot(aes(x=keyword,fill=Species))+
theme_minimal() +
geom_bar(position="fill") +
guides(fill=guide_legend(ncol=2))+
ggtitle("Distribution of Species in environments with Candida/Clavispora")+
xlab("keywords")+
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+
theme(legend.position = "right")
filename <- "results.csv"
